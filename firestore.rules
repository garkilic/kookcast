rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // User document rules
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
      
      // Validate board types
      allow write: if request.resource.data.boardTypes is list &&
                  request.resource.data.boardTypes.size() <= 6; // Max 6 board types
      
      // Surf diary entries rules
      match /surfEntries/{entryId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow create: if isAuthenticated() && isOwner(userId);
        allow update: if isAuthenticated() && isOwner(userId);
        allow delete: if isAuthenticated() && isOwner(userId);
        
        // Validate surf entry data
        allow write: if request.resource.data.date is string &&
                    request.resource.data.surfed is bool &&
                    request.resource.data.notes is string &&
                    request.resource.data.conditions is map &&
                    request.resource.data.rating is number &&
                    request.resource.data.rating >= 0 &&
                    request.resource.data.rating <= 5;
      }
    }
    
    // Customer and subscription rules
    match /customers/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
      
      match /subscriptions/{subscriptionId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
      
      match /checkout_sessions/{sessionId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow create: if isAuthenticated() && isOwner(userId);
      }
    }
    
    match /surfSpots/{spotId} {
      allow read;
    }
  }
}